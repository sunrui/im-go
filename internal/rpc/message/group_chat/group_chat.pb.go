//
// Copyright © 2024 honeysense.com All rights reserved.
// Author: sunrui
// Date: 2024-03-26 13:47:26

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: internal/rpc/message/group_chat/group_chat.proto

package group_chat

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 接收请求
type ReceiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReceiveRequest) Reset() {
	*x = ReceiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_message_group_chat_group_chat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveRequest) ProtoMessage() {}

func (x *ReceiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_message_group_chat_group_chat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveRequest.ProtoReflect.Descriptor instead.
func (*ReceiveRequest) Descriptor() ([]byte, []int) {
	return file_internal_rpc_message_group_chat_group_chat_proto_rawDescGZIP(), []int{0}
}

// 接收回复
type ReceiveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"` // 用户 id
	// Types that are assignable to Type:
	//
	//	*ReceiveReply_Online
	//	*ReceiveReply_Offline
	//	*ReceiveReply_Join
	//	*ReceiveReply_Leave
	//	*ReceiveReply_Mute
	//	*ReceiveReply_Unmute
	Type isReceiveReply_Type `protobuf_oneof:"Type"`
}

func (x *ReceiveReply) Reset() {
	*x = ReceiveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_rpc_message_group_chat_group_chat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveReply) ProtoMessage() {}

func (x *ReceiveReply) ProtoReflect() protoreflect.Message {
	mi := &file_internal_rpc_message_group_chat_group_chat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveReply.ProtoReflect.Descriptor instead.
func (*ReceiveReply) Descriptor() ([]byte, []int) {
	return file_internal_rpc_message_group_chat_group_chat_proto_rawDescGZIP(), []int{1}
}

func (x *ReceiveReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (m *ReceiveReply) GetType() isReceiveReply_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *ReceiveReply) GetOnline() *Online {
	if x, ok := x.GetType().(*ReceiveReply_Online); ok {
		return x.Online
	}
	return nil
}

func (x *ReceiveReply) GetOffline() *Offline {
	if x, ok := x.GetType().(*ReceiveReply_Offline); ok {
		return x.Offline
	}
	return nil
}

func (x *ReceiveReply) GetJoin() *Join {
	if x, ok := x.GetType().(*ReceiveReply_Join); ok {
		return x.Join
	}
	return nil
}

func (x *ReceiveReply) GetLeave() *Leave {
	if x, ok := x.GetType().(*ReceiveReply_Leave); ok {
		return x.Leave
	}
	return nil
}

func (x *ReceiveReply) GetMute() *Mute {
	if x, ok := x.GetType().(*ReceiveReply_Mute); ok {
		return x.Mute
	}
	return nil
}

func (x *ReceiveReply) GetUnmute() *Unmute {
	if x, ok := x.GetType().(*ReceiveReply_Unmute); ok {
		return x.Unmute
	}
	return nil
}

type isReceiveReply_Type interface {
	isReceiveReply_Type()
}

type ReceiveReply_Online struct {
	Online *Online `protobuf:"bytes,6,opt,name=online,proto3,oneof"` // 上线
}

type ReceiveReply_Offline struct {
	Offline *Offline `protobuf:"bytes,7,opt,name=offline,proto3,oneof"` // 下线
}

type ReceiveReply_Join struct {
	Join *Join `protobuf:"bytes,2,opt,name=join,proto3,oneof"` // 加入
}

type ReceiveReply_Leave struct {
	Leave *Leave `protobuf:"bytes,3,opt,name=leave,proto3,oneof"` // 离开
}

type ReceiveReply_Mute struct {
	Mute *Mute `protobuf:"bytes,4,opt,name=mute,proto3,oneof"` // 禁言
}

type ReceiveReply_Unmute struct {
	Unmute *Unmute `protobuf:"bytes,5,opt,name=unmute,proto3,oneof"` // 解除禁言
}

func (*ReceiveReply_Online) isReceiveReply_Type() {}

func (*ReceiveReply_Offline) isReceiveReply_Type() {}

func (*ReceiveReply_Join) isReceiveReply_Type() {}

func (*ReceiveReply_Leave) isReceiveReply_Type() {}

func (*ReceiveReply_Mute) isReceiveReply_Type() {}

func (*ReceiveReply_Unmute) isReceiveReply_Type() {}

var File_internal_rpc_message_group_chat_group_chat_proto protoreflect.FileDescriptor

var file_internal_rpc_message_group_chat_group_chat_proto_rawDesc = []byte{
	0x0a, 0x30, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x68, 0x61,
	0x74, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x1f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63,
	0x68, 0x61, 0x74, 0x1a, 0x2c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x70,
	0x63, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x63, 0x68, 0x61, 0x74, 0x2f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x70, 0x63, 0x2f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x68,
	0x61, 0x74, 0x2f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x68, 0x61,
	0x74, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x6c, 0x65,
	0x61, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x6d, 0x75, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f,
	0x72, 0x70, 0x63, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x75, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x10, 0x0a, 0x0e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb4, 0x03, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x41,
	0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x44, 0x0a, 0x07, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x04,
	0x6a, 0x6f, 0x69, 0x6e, 0x12, 0x3e, 0x0a, 0x05, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x48, 0x00, 0x52, 0x05, 0x6c,
	0x65, 0x61, 0x76, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x6d, 0x75, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x75, 0x74, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x75, 0x74,
	0x65, 0x12, 0x41, 0x0a, 0x06, 0x75, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x75, 0x6e,
	0x6d, 0x75, 0x74, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x32, 0x78, 0x0a, 0x09,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x12, 0x6b, 0x0a, 0x07, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x12, 0x2f, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x30, 0x01, 0x42, 0x21, 0x5a, 0x1f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_internal_rpc_message_group_chat_group_chat_proto_rawDescOnce sync.Once
	file_internal_rpc_message_group_chat_group_chat_proto_rawDescData = file_internal_rpc_message_group_chat_group_chat_proto_rawDesc
)

func file_internal_rpc_message_group_chat_group_chat_proto_rawDescGZIP() []byte {
	file_internal_rpc_message_group_chat_group_chat_proto_rawDescOnce.Do(func() {
		file_internal_rpc_message_group_chat_group_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_rpc_message_group_chat_group_chat_proto_rawDescData)
	})
	return file_internal_rpc_message_group_chat_group_chat_proto_rawDescData
}

var file_internal_rpc_message_group_chat_group_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_internal_rpc_message_group_chat_group_chat_proto_goTypes = []interface{}{
	(*ReceiveRequest)(nil), // 0: internal.rpc.message.group_chat.ReceiveRequest
	(*ReceiveReply)(nil),   // 1: internal.rpc.message.group_chat.ReceiveReply
	(*Online)(nil),         // 2: internal.rpc.message.group_chat.Online
	(*Offline)(nil),        // 3: internal.rpc.message.group_chat.Offline
	(*Join)(nil),           // 4: internal.rpc.message.group_chat.Join
	(*Leave)(nil),          // 5: internal.rpc.message.group_chat.Leave
	(*Mute)(nil),           // 6: internal.rpc.message.group_chat.Mute
	(*Unmute)(nil),         // 7: internal.rpc.message.group_chat.Unmute
}
var file_internal_rpc_message_group_chat_group_chat_proto_depIdxs = []int32{
	2, // 0: internal.rpc.message.group_chat.ReceiveReply.online:type_name -> internal.rpc.message.group_chat.Online
	3, // 1: internal.rpc.message.group_chat.ReceiveReply.offline:type_name -> internal.rpc.message.group_chat.Offline
	4, // 2: internal.rpc.message.group_chat.ReceiveReply.join:type_name -> internal.rpc.message.group_chat.Join
	5, // 3: internal.rpc.message.group_chat.ReceiveReply.leave:type_name -> internal.rpc.message.group_chat.Leave
	6, // 4: internal.rpc.message.group_chat.ReceiveReply.mute:type_name -> internal.rpc.message.group_chat.Mute
	7, // 5: internal.rpc.message.group_chat.ReceiveReply.unmute:type_name -> internal.rpc.message.group_chat.Unmute
	0, // 6: internal.rpc.message.group_chat.GroupChat.Receive:input_type -> internal.rpc.message.group_chat.ReceiveRequest
	1, // 7: internal.rpc.message.group_chat.GroupChat.Receive:output_type -> internal.rpc.message.group_chat.ReceiveReply
	7, // [7:8] is the sub-list for method output_type
	6, // [6:7] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_internal_rpc_message_group_chat_group_chat_proto_init() }
func file_internal_rpc_message_group_chat_group_chat_proto_init() {
	if File_internal_rpc_message_group_chat_group_chat_proto != nil {
		return
	}
	file_internal_rpc_message_group_chat_online_proto_init()
	file_internal_rpc_message_group_chat_offline_proto_init()
	file_internal_rpc_message_group_chat_join_proto_init()
	file_internal_rpc_message_group_chat_leave_proto_init()
	file_internal_rpc_message_group_chat_mute_proto_init()
	file_internal_rpc_message_group_chat_unmute_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_internal_rpc_message_group_chat_group_chat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_rpc_message_group_chat_group_chat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_internal_rpc_message_group_chat_group_chat_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ReceiveReply_Online)(nil),
		(*ReceiveReply_Offline)(nil),
		(*ReceiveReply_Join)(nil),
		(*ReceiveReply_Leave)(nil),
		(*ReceiveReply_Mute)(nil),
		(*ReceiveReply_Unmute)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_rpc_message_group_chat_group_chat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_rpc_message_group_chat_group_chat_proto_goTypes,
		DependencyIndexes: file_internal_rpc_message_group_chat_group_chat_proto_depIdxs,
		MessageInfos:      file_internal_rpc_message_group_chat_group_chat_proto_msgTypes,
	}.Build()
	File_internal_rpc_message_group_chat_group_chat_proto = out.File
	file_internal_rpc_message_group_chat_group_chat_proto_rawDesc = nil
	file_internal_rpc_message_group_chat_group_chat_proto_goTypes = nil
	file_internal_rpc_message_group_chat_group_chat_proto_depIdxs = nil
}
