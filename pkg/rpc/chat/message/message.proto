/*
 * Copyright © 2024 honeysense.com All rights reserved.
 * Author: sunrui
 * Date: 2024-03-07 23:31:57
 */

syntax = "proto3";

import "pkg/rpc/chat/message/message_text.proto";
import "pkg/rpc/chat/message/message_sticker.proto";
import "pkg/rpc/chat/message/message_quoted.proto";
import "pkg/rpc/chat/message/message_image.proto";
import "pkg/rpc/chat/message/message_audio.proto";
import "pkg/rpc/chat/message/message_video.proto";
import "pkg/rpc/chat/message/message_file.proto";
import "pkg/rpc/chat/message/message_location.proto";
import "pkg/rpc/chat/message/message_card.proto";
import "pkg/rpc/chat/message/message_withdraw.proto";
import "pkg/rpc/chat/message/message_voice.proto";
import "pkg/rpc/chat/message/message_voice_call.proto";
import "pkg/rpc/chat/message/message_video_call.proto";

package pkg.rpc.chat.message;
option go_package = "pkg/rpc/chat/message";

// 来源
message Source {
  string sequenceId = 1; // 序号

  oneof Id {
    string userId = 10; // 用户 id
    string groupId = 11; // 群组 id
    string roomId = 12; // 房间 id
    string bottleId = 13; // 漂流瓶 id
  }

  int64 timestamp = 4; // 时间戳
}

// 聊天内容
message Content {
  oneof Type {
    MessageText text = 10; // 文字
    MessageSticker sticker = 11; // 表情包
    MessageQuoted quoted = 12; // 引用
    MessageImage image = 13; // 图片
    MessageAudio audio = 14; // 音频
    MessageVideo video = 15; // 视频
    MessageFile file = 16; // 文件
    MessageLocation location = 17; // 定位
    MessageCard card = 18; // 卡片
    MessageWithdraw withdraw = 19; // 撤回
    MessageVoice voice = 20; // 语音信息
    MessageVoiceCall voiceCall = 21; // 语音通话
    MessageVideoCall videoCall = 22; // 视频通话
  }
}

// 发送请求
message ToRequest {
  Source source = 1; // 来源
  Content chat = 2; // 内容
}

// 发送回复
message ToReply {
  int32 sequenceId = 1; // 序号

  // 状态
  enum Status {
    SENT = 0; // 已发送
    REJECT = 22; // 拒收
  }

  Status status = 3; // 状态
  string comment = 4; // 备注
}

// 订阅请求
message SubscribeRequest {
}

// 订阅回复
message SubscribeReply {
  Source source = 1; // 来源
  Content chat = 2; // 内容
}

// 聊天
service Message {
  // 发送
  rpc To(ToRequest) returns(ToReply);
  // 订阅
  rpc Subscribe(SubscribeRequest) returns(stream SubscribeReply);
}